// Code generated by mockery v2.42.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	sql "database/sql"
)

// PgConn is an autogenerated mock type for the PgConn type
type PgConn struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *PgConn) Close() {
	_m.Called()
}

// DB provides a mock function with given fields:
func (_m *PgConn) DB() *sql.DB {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for DB")
	}

	var r0 *sql.DB
	if rf, ok := ret.Get(0).(func() *sql.DB); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*sql.DB)
		}
	}

	return r0
}

// NewPgConn creates a new instance of PgConn. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPgConn(t interface {
	mock.TestingT
	Cleanup(func())
}) *PgConn {
	mock := &PgConn{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
